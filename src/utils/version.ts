import { APP_NAME, APP_VERSION } from './app-version';
import { getApiUrl } from './runtime-config';

/**
 * Utilit√°rio para exibir informa√ß√µes de vers√£o da aplica√ß√£o
 */
export class VersionLogger {
    private static readonly APP_NAME = APP_NAME;
    private static readonly VERSION = APP_VERSION;

    /**
     * Exibe a vers√£o no console do servidor (Node.js)
     */
    static logServerVersion(): void {
        if (typeof window === 'undefined') {
            console.log('‚îÄ'.repeat(50));
            console.log(`üì¶ Vers√£o: ${this.VERSION}`);
            console.log(`üåê Ambiente: ${process.env.NODE_ENV}`);
            console.log(`üîå API Url: ${getApiUrl()}`);
            console.log('‚îÄ'.repeat(50));
        }
    }

    /**
     * Exibe a vers√£o no console do navegador (Client-side)
     */
    static logClientVersion(): void {
        if (typeof window !== 'undefined') {
            console.log(`%cüöÄ ${this.APP_NAME} v${this.VERSION}`, 'color: #0070f3; font-weight: bold; font-size: 16px;');
            console.log(`%cüì¶ Vers√£o: ${this.VERSION}`, 'color: #666; font-size: 12px;');
            console.log(`%cüåê Ambiente: ${process.env.NODE_ENV}`, 'color: #666; font-size: 12px;');
            console.log('%c' + '‚îÄ'.repeat(50), 'color: #ddd;');
        }
    }

    /**
     * Retorna a vers√£o atual
     */
    static getVersion(): string {
        return this.VERSION;
    }

    /**
     * Retorna informa√ß√µes completas da aplica√ß√£o
     */
    static getAppInfo(): { name: string; version: string; environment: string } {
        return {
            name: this.APP_NAME,
            version: this.VERSION,
            environment: process.env.NODE_ENV
        };
    }
}